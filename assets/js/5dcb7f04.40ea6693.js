"use strict";(self.webpackChunkmongoose_relay_paginate=self.webpackChunkmongoose_relay_paginate||[]).push([[445],{5245:function(o){o.exports=JSON.parse('{"blogPosts":[{"id":"what-is-cursoring","metadata":{"permalink":"/mongoose-relay-paginate/blog/what-is-cursoring","editUrl":"https://github.com/johnsonjo4531/mongoose-relay-paginate/tree/main/packages/create-docusaurus/templates/shared/blog/2022-02-30-what-is-cursoring-and-pagination.md","source":"@site/blog/2022-02-30-what-is-cursoring-and-pagination.md","title":"What is cursoring and pagination?","description":"A cursor helps a server to find an item in a database.","date":"2022-03-02T00:00:00.000Z","formattedDate":"March 2, 2022","tags":[{"label":"what","permalink":"/mongoose-relay-paginate/blog/tags/what"},{"label":"pagination","permalink":"/mongoose-relay-paginate/blog/tags/pagination"},{"label":"cursors","permalink":"/mongoose-relay-paginate/blog/tags/cursors"},{"label":"cursor","permalink":"/mongoose-relay-paginate/blog/tags/cursor"},{"label":"cursoring","permalink":"/mongoose-relay-paginate/blog/tags/cursoring"},{"label":"paging","permalink":"/mongoose-relay-paginate/blog/tags/paging"}],"readingTime":1.115,"truncated":false,"authors":[{"name":"John D. Johnson II","title":"Maintainer of mongoose-relay-paginate","url":"https://github.com/johnsonjo4531","imageURL":"https://github.com/johnsonjo4531.png","key":"johnsonjo4531"}],"frontMatter":{"slug":"what-is-cursoring","title":"What is cursoring and pagination?","authors":["johnsonjo4531"],"tags":["what","pagination","cursors","cursor","cursoring","paging"]},"nextItem":{"title":"Why would I want cursor based paging?","permalink":"/mongoose-relay-paginate/blog/why-cursor-based-paging"}},"content":"A cursor helps a server to find an item in a database.\\n\\nIf you\'re not exactly sure what that means here\'s an analogy.\\nIt\'s a lot like when you go to the library and have some information for\\na specific book. This information you have about the book can help you locate it.\\n\\nA cursor (some information) can be turned into a database object (the book) by finding the first instance of it in the database (the library).\\n\\nBelow is a hypothetical example:\\n```\\nCursor        -> Some query from a cursor -> DB Object\\n{name: \\"bob\\"} -> Some query from a cursor -> {name: \\"bob\\", job: \\"something\\", location: \\"some place 123rd street\\"}\\n```\\n\\nAn example of some query from a cursor, in MongoDB is:\\n\\n```js\\nconst {name, job, location} = await Employee.findOne({name: \\"bob\\"});\\n```\\n\\nA database object can be turned into a cursor with a transform of some sort in our case it will be provided by the user.\\n\\nBelow is a hypothetical example:\\n```\\nDB Object -> some transform to a cursor -> Cursor\\n{\\n   name: \\"bob\\",\\n   job: \\"something\\",\\n   location: \\"some place 123rd street\\"\\n}        -> some tranform to a cursor  -> {name: \\"bob\\"}\\n```\\n\\nan example of how one would make this transform in particular the way this library does is through the cursorKeys option:\\n\\n```js\\nUserMode.find().relayPaginate({\\n  cursorKeys: [\\"name\\"]\\n})\\n```"},{"id":"why-cursor-based-paging","metadata":{"permalink":"/mongoose-relay-paginate/blog/why-cursor-based-paging","editUrl":"https://github.com/johnsonjo4531/mongoose-relay-paginate/tree/main/packages/create-docusaurus/templates/shared/blog/2022-02-30-why-cursor-based-paging/index.md","source":"@site/blog/2022-02-30-why-cursor-based-paging/index.md","title":"Why would I want cursor based paging?","description":"TLDR; When should I choose cursoring?","date":"2022-03-02T00:00:00.000Z","formattedDate":"March 2, 2022","tags":[{"label":"why","permalink":"/mongoose-relay-paginate/blog/tags/why"},{"label":"pagination","permalink":"/mongoose-relay-paginate/blog/tags/pagination"},{"label":"cursors","permalink":"/mongoose-relay-paginate/blog/tags/cursors"},{"label":"cursor","permalink":"/mongoose-relay-paginate/blog/tags/cursor"},{"label":"cursoring","permalink":"/mongoose-relay-paginate/blog/tags/cursoring"},{"label":"paging","permalink":"/mongoose-relay-paginate/blog/tags/paging"}],"readingTime":1.41,"truncated":false,"authors":[{"name":"John D. Johnson II","title":"Maintainer of mongoose-relay-paginate","url":"https://github.com/johnsonjo4531","imageURL":"https://github.com/johnsonjo4531.png","key":"johnsonjo4531"}],"frontMatter":{"slug":"why-cursor-based-paging","title":"Why would I want cursor based paging?","authors":["johnsonjo4531"],"tags":["why","pagination","cursors","cursor","cursoring","paging"]},"prevItem":{"title":"What is cursoring and pagination?","permalink":"/mongoose-relay-paginate/blog/what-is-cursoring"}},"content":"## TLDR; When should I choose cursoring?\\n\\nWhen your new information is being added to the beggining of your sorted list that is returned from a database.\\n\\n## What are alternatives to cursor based paging?\\n\\nCursor based paging is sometimes just called cursoring so as not to confuse the term with regular non-cursor based paging.\\n\\nFrom here on in this blog post I will use paging to refer to non-cursor based paging and cursoring to refer to cursor based paging.\\n\\n\\nIf you don\'t know what cursoring is [read more about cursoring here](../2022-02-30-what-is-cursoring-and-pagination.md).\\n\\nPaging generally uses skip and limit. Paging is usually displayed in individual pages and allows one to move from page to page with something like this:\\n\\n![Pagination Buttons](./paging.png)\\n\\nWhereas Cursoring is usually displayed in an infinite scrolling feed.\\n\\nThe problem with paging is say your pages of items are from newest to oldest, and that you store 20 items on each page. You (the user) are on page 2 and suddenly 20 new items are submitted to the beginning of the list of items. Suddenly now you\'re on page 3, but the UI still shows you on page 2, so when you click on page 3 nothing would appear to happen.\\n\\nTo avoid this problem we use cursoring. Which instead of keeping track of where you are based off a skip and limit, it keeps track of where you are based off of any single item in the collection and then allows you to ask for things before or after that item. Each single item in a collection can be turned into a cursor, so that you can query other items relative to where that item is in the collection."}]}')}}]);